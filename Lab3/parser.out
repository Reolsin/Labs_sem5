Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> prog line es
Rule 2     prog -> prog fdecl es
Rule 3     prog -> <empty>
Rule 4     es -> es es
Rule 5     es -> ES
Rule 6     line -> sent
Rule 7     line -> logic
Rule 8     line -> fcall
Rule 9     line -> decl
Rule 10    line -> cdecl
Rule 11    line -> group
Rule 12    line -> <empty>
Rule 13    sent -> PRINT ID
Rule 14    sent -> ID EQ expr
Rule 15    sent -> access EQ expr
Rule 16    sent -> EXTEND1 ID expr
Rule 17    sent -> EXTEND2 ID expr expr
Rule 18    sent -> expr
Rule 19    sent -> UNDO
Rule 20    group -> FOPEN lines line FCLOSE
Rule 21    group -> FOPEN lines FCLOSE
Rule 22    lines -> lines line es
Rule 23    lines -> <empty>
Rule 24    decl -> 2ldecl
Rule 25    decl -> 2adecl
Rule 26    decl -> 1ldecl
Rule 27    decl -> 1adecl
Rule 28    decl -> lvdecl
Rule 29    decl -> avdecl
Rule 30    cdecl -> cldecl
Rule 31    cdecl -> cadecl
Rule 32    cldecl -> CLVAR ID EQ expr
Rule 33    cadecl -> CAVAR ID EQ expr
Rule 34    lvdecl -> LVAR ID
Rule 35    lvdecl -> LVAR ID EQ expr
Rule 36    avdecl -> AVAR ID
Rule 37    avdecl -> AVAR ID EQ expr
Rule 38    1ldecl -> L1ARR ID
Rule 39    1ldecl -> L1ARR ID EQ SOPEN vals SCLOSE
Rule 40    1adecl -> A1ARR ID
Rule 41    1adecl -> A1ARR ID EQ SOPEN vals SCLOSE
Rule 42    2ldecl -> L2ARR ID
Rule 43    2ldecl -> L2ARR ID EQ SOPEN arrs SCLOSE
Rule 44    2adecl -> A2ARR ID
Rule 45    2adecl -> A2ARR ID EQ SOPEN arrs SCLOSE
Rule 46    vals -> expr COMA vals
Rule 47    vals -> expr
Rule 48    arrs -> vals COMD arrs
Rule 49    arrs -> COMD arrs
Rule 50    arrs -> vals
Rule 51    arrs -> <empty>
Rule 52    fdecl -> fovars FUNCTION ID fivars group
Rule 53    fovars -> ID EQ expr
Rule 54    fovars -> SOPEN fvars SCLOSE
Rule 55    fivars -> OPEN fvars CLOSE
Rule 56    fvars -> ID EQ expr
Rule 57    fvars -> ID EQ expr COMA fvars
Rule 58    fvars -> <empty>
Rule 59    expr -> oper
Rule 60    expr -> ACONST
Rule 61    expr -> LCONST
Rule 62    expr -> ID
Rule 63    expr -> NOT expr
Rule 64    expr -> INCDEC expr
Rule 65    expr -> expr GTLT expr
Rule 66    expr -> expr OR expr
Rule 67    expr -> OPEN expr CLOSE
Rule 68    oper -> MOVE
Rule 69    oper -> GET
Rule 70    oper -> PUSH
Rule 71    oper -> SIZE1 ID
Rule 72    oper -> SIZE2 ID expr
Rule 73    oper -> access
Rule 74    access -> ID OPEN expr COMA expr CLOSE
Rule 75    access -> ID OPEN expr CLOSE
Rule 76    logic -> cond
Rule 77    logic -> loop
Rule 78    cond -> IF expr sent else
Rule 79    cond -> IF expr group else
Rule 80    else -> ELSE sent
Rule 81    else -> ELSE group
Rule 82    else -> <empty>
Rule 83    loop -> WHILE expr DO sent
Rule 84    loop -> WHILE expr DO group
Rule 85    fcall -> SOPEN vars SCLOSE EQ ID OPEN pars CLOSE
Rule 86    vars -> ID COMA vars
Rule 87    vars -> COMA vars
Rule 88    vars -> access COMA vars
Rule 89    vars -> access
Rule 90    vars -> ID
Rule 91    vars -> <empty>
Rule 92    pars -> expr COMA pars
Rule 93    pars -> COMA pars
Rule 94    pars -> expr
Rule 95    pars -> <empty>

Terminals, with rules where they appear

A1ARR                : 40 41
A2ARR                : 44 45
ACONST               : 60
AVAR                 : 36 37
CAVAR                : 33
CLOSE                : 55 67 74 75 85
CLVAR                : 32
COMA                 : 46 57 74 86 87 88 92 93
COMD                 : 48 49
DO                   : 83 84
ELSE                 : 80 81
EQ                   : 14 15 32 33 35 37 39 41 43 45 53 56 57 85
ES                   : 5
EXTEND1              : 16
EXTEND2              : 17
FCLOSE               : 20 21
FOPEN                : 20 21
FUNCTION             : 52
GET                  : 69
GTLT                 : 65
ID                   : 13 14 16 17 32 33 34 35 36 37 38 39 40 41 42 43 44 45 52 53 56 57 62 71 72 74 75 85 86 90
IF                   : 78 79
INCDEC               : 64
L1ARR                : 38 39
L2ARR                : 42 43
LCONST               : 61
LVAR                 : 34 35
MOVE                 : 68
NOT                  : 63
OPEN                 : 55 67 74 75 85
OR                   : 66
PRINT                : 13
PUSH                 : 70
SCLOSE               : 39 41 43 45 54 85
SIZE1                : 71
SIZE2                : 72
SOPEN                : 39 41 43 45 54 85
UNDO                 : 19
WHILE                : 83 84
error                : 

Nonterminals, with rules where they appear

1adecl               : 27
1ldecl               : 26
2adecl               : 25
2ldecl               : 24
access               : 15 73 88 89
arrs                 : 43 45 48 49
avdecl               : 29
cadecl               : 31
cdecl                : 10
cldecl               : 30
cond                 : 76
decl                 : 9
else                 : 78 79
es                   : 1 2 4 4 22
expr                 : 14 15 16 17 17 18 32 33 35 37 46 47 53 56 57 63 64 65 65 66 66 67 72 74 74 75 78 79 83 84 92 94
fcall                : 8
fdecl                : 2
fivars               : 52
fovars               : 52
fvars                : 54 55 57
group                : 11 52 79 81 84
line                 : 1 20 22
lines                : 20 21 22
logic                : 7
loop                 : 77
lvdecl               : 28
oper                 : 59
pars                 : 85 92 93
prog                 : 1 2 0
sent                 : 6 78 80 83
vals                 : 39 41 46 48 50
vars                 : 85 86 87 88

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . prog line es
    (2) prog -> . prog fdecl es
    (3) prog -> .

    PRINT           reduce using rule 3 (prog -> .)
    ID              reduce using rule 3 (prog -> .)
    EXTEND1         reduce using rule 3 (prog -> .)
    EXTEND2         reduce using rule 3 (prog -> .)
    UNDO            reduce using rule 3 (prog -> .)
    SOPEN           reduce using rule 3 (prog -> .)
    FOPEN           reduce using rule 3 (prog -> .)
    ACONST          reduce using rule 3 (prog -> .)
    LCONST          reduce using rule 3 (prog -> .)
    NOT             reduce using rule 3 (prog -> .)
    INCDEC          reduce using rule 3 (prog -> .)
    OPEN            reduce using rule 3 (prog -> .)
    IF              reduce using rule 3 (prog -> .)
    WHILE           reduce using rule 3 (prog -> .)
    L2ARR           reduce using rule 3 (prog -> .)
    A2ARR           reduce using rule 3 (prog -> .)
    L1ARR           reduce using rule 3 (prog -> .)
    A1ARR           reduce using rule 3 (prog -> .)
    LVAR            reduce using rule 3 (prog -> .)
    AVAR            reduce using rule 3 (prog -> .)
    CLVAR           reduce using rule 3 (prog -> .)
    CAVAR           reduce using rule 3 (prog -> .)
    MOVE            reduce using rule 3 (prog -> .)
    GET             reduce using rule 3 (prog -> .)
    PUSH            reduce using rule 3 (prog -> .)
    SIZE1           reduce using rule 3 (prog -> .)
    SIZE2           reduce using rule 3 (prog -> .)
    $end            reduce using rule 3 (prog -> .)
    ES              reduce using rule 3 (prog -> .)

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .
    (1) prog -> prog . line es
    (2) prog -> prog . fdecl es
    (6) line -> . sent
    (7) line -> . logic
    (8) line -> . fcall
    (9) line -> . decl
    (10) line -> . cdecl
    (11) line -> . group
    (12) line -> .
    (52) fdecl -> . fovars FUNCTION ID fivars group
    (13) sent -> . PRINT ID
    (14) sent -> . ID EQ expr
    (15) sent -> . access EQ expr
    (16) sent -> . EXTEND1 ID expr
    (17) sent -> . EXTEND2 ID expr expr
    (18) sent -> . expr
    (19) sent -> . UNDO
    (76) logic -> . cond
    (77) logic -> . loop
    (85) fcall -> . SOPEN vars SCLOSE EQ ID OPEN pars CLOSE
    (24) decl -> . 2ldecl
    (25) decl -> . 2adecl
    (26) decl -> . 1ldecl
    (27) decl -> . 1adecl
    (28) decl -> . lvdecl
    (29) decl -> . avdecl
    (30) cdecl -> . cldecl
    (31) cdecl -> . cadecl
    (20) group -> . FOPEN lines line FCLOSE
    (21) group -> . FOPEN lines FCLOSE
    (53) fovars -> . ID EQ expr
    (54) fovars -> . SOPEN fvars SCLOSE
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (78) cond -> . IF expr sent else
    (79) cond -> . IF expr group else
    (83) loop -> . WHILE expr DO sent
    (84) loop -> . WHILE expr DO group
    (42) 2ldecl -> . L2ARR ID
    (43) 2ldecl -> . L2ARR ID EQ SOPEN arrs SCLOSE
    (44) 2adecl -> . A2ARR ID
    (45) 2adecl -> . A2ARR ID EQ SOPEN arrs SCLOSE
    (38) 1ldecl -> . L1ARR ID
    (39) 1ldecl -> . L1ARR ID EQ SOPEN vals SCLOSE
    (40) 1adecl -> . A1ARR ID
    (41) 1adecl -> . A1ARR ID EQ SOPEN vals SCLOSE
    (34) lvdecl -> . LVAR ID
    (35) lvdecl -> . LVAR ID EQ expr
    (36) avdecl -> . AVAR ID
    (37) avdecl -> . AVAR ID EQ expr
    (32) cldecl -> . CLVAR ID EQ expr
    (33) cadecl -> . CAVAR ID EQ expr
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access

    ES              reduce using rule 12 (line -> .)
    PRINT           shift and go to state 12
    ID              shift and go to state 11
    EXTEND1         shift and go to state 15
    EXTEND2         shift and go to state 16
    UNDO            shift and go to state 17
    SOPEN           shift and go to state 20
    FOPEN           shift and go to state 30
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    L2ARR           shift and go to state 38
    A2ARR           shift and go to state 39
    L1ARR           shift and go to state 40
    A1ARR           shift and go to state 41
    LVAR            shift and go to state 42
    AVAR            shift and go to state 43
    CLVAR           shift and go to state 44
    CAVAR           shift and go to state 45
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    line                           shift and go to state 2
    fdecl                          shift and go to state 3
    sent                           shift and go to state 4
    logic                          shift and go to state 5
    fcall                          shift and go to state 6
    decl                           shift and go to state 7
    cdecl                          shift and go to state 8
    group                          shift and go to state 9
    fovars                         shift and go to state 10
    expr                           shift and go to state 13
    access                         shift and go to state 14
    cond                           shift and go to state 18
    loop                           shift and go to state 19
    2ldecl                         shift and go to state 22
    2adecl                         shift and go to state 23
    1ldecl                         shift and go to state 24
    1adecl                         shift and go to state 25
    lvdecl                         shift and go to state 26
    avdecl                         shift and go to state 27
    cldecl                         shift and go to state 28
    cadecl                         shift and go to state 29
    oper                           shift and go to state 31

state 2

    (1) prog -> prog line . es
    (4) es -> . es es
    (5) es -> . ES

    ES              shift and go to state 52

    es                             shift and go to state 51

state 3

    (2) prog -> prog fdecl . es
    (4) es -> . es es
    (5) es -> . ES

    ES              shift and go to state 52

    es                             shift and go to state 53

state 4

    (6) line -> sent .

    ES              reduce using rule 6 (line -> sent .)
    FCLOSE          reduce using rule 6 (line -> sent .)


state 5

    (7) line -> logic .

    ES              reduce using rule 7 (line -> logic .)
    FCLOSE          reduce using rule 7 (line -> logic .)


state 6

    (8) line -> fcall .

    ES              reduce using rule 8 (line -> fcall .)
    FCLOSE          reduce using rule 8 (line -> fcall .)


state 7

    (9) line -> decl .

    ES              reduce using rule 9 (line -> decl .)
    FCLOSE          reduce using rule 9 (line -> decl .)


state 8

    (10) line -> cdecl .

    ES              reduce using rule 10 (line -> cdecl .)
    FCLOSE          reduce using rule 10 (line -> cdecl .)


state 9

    (11) line -> group .

    ES              reduce using rule 11 (line -> group .)
    FCLOSE          reduce using rule 11 (line -> group .)


state 10

    (52) fdecl -> fovars . FUNCTION ID fivars group

    FUNCTION        shift and go to state 54


state 11

    (14) sent -> ID . EQ expr
    (53) fovars -> ID . EQ expr
    (74) access -> ID . OPEN expr COMA expr CLOSE
    (75) access -> ID . OPEN expr CLOSE
    (62) expr -> ID .

    EQ              shift and go to state 55
    OPEN            shift and go to state 56
    GTLT            reduce using rule 62 (expr -> ID .)
    OR              reduce using rule 62 (expr -> ID .)
    ES              reduce using rule 62 (expr -> ID .)


state 12

    (13) sent -> PRINT . ID

    ID              shift and go to state 57


state 13

    (18) sent -> expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 18 (sent -> expr .)
    FCLOSE          reduce using rule 18 (sent -> expr .)
    ELSE            reduce using rule 18 (sent -> expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 14

    (15) sent -> access . EQ expr
    (73) oper -> access .

    EQ              shift and go to state 60
    GTLT            reduce using rule 73 (oper -> access .)
    OR              reduce using rule 73 (oper -> access .)
    ES              reduce using rule 73 (oper -> access .)
    FCLOSE          reduce using rule 73 (oper -> access .)
    ELSE            reduce using rule 73 (oper -> access .)


state 15

    (16) sent -> EXTEND1 . ID expr

    ID              shift and go to state 61


state 16

    (17) sent -> EXTEND2 . ID expr expr

    ID              shift and go to state 62


state 17

    (19) sent -> UNDO .

    ES              reduce using rule 19 (sent -> UNDO .)
    FCLOSE          reduce using rule 19 (sent -> UNDO .)
    ELSE            reduce using rule 19 (sent -> UNDO .)


state 18

    (76) logic -> cond .

    ES              reduce using rule 76 (logic -> cond .)
    FCLOSE          reduce using rule 76 (logic -> cond .)


state 19

    (77) logic -> loop .

    ES              reduce using rule 77 (logic -> loop .)
    FCLOSE          reduce using rule 77 (logic -> loop .)


state 20

    (85) fcall -> SOPEN . vars SCLOSE EQ ID OPEN pars CLOSE
    (54) fovars -> SOPEN . fvars SCLOSE
    (86) vars -> . ID COMA vars
    (87) vars -> . COMA vars
    (88) vars -> . access COMA vars
    (89) vars -> . access
    (90) vars -> . ID
    (91) vars -> .
    (56) fvars -> . ID EQ expr
    (57) fvars -> . ID EQ expr COMA fvars
    (58) fvars -> .
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

  ! reduce/reduce conflict for SCLOSE resolved using rule 58 (fvars -> .)
    ID              shift and go to state 64
    COMA            shift and go to state 66
    SCLOSE          reduce using rule 58 (fvars -> .)

  ! SCLOSE          [ reduce using rule 91 (vars -> .) ]

    vars                           shift and go to state 63
    fvars                          shift and go to state 65
    access                         shift and go to state 67

state 21

    (67) expr -> OPEN . expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 68
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 22

    (24) decl -> 2ldecl .

    ES              reduce using rule 24 (decl -> 2ldecl .)
    FCLOSE          reduce using rule 24 (decl -> 2ldecl .)


state 23

    (25) decl -> 2adecl .

    ES              reduce using rule 25 (decl -> 2adecl .)
    FCLOSE          reduce using rule 25 (decl -> 2adecl .)


state 24

    (26) decl -> 1ldecl .

    ES              reduce using rule 26 (decl -> 1ldecl .)
    FCLOSE          reduce using rule 26 (decl -> 1ldecl .)


state 25

    (27) decl -> 1adecl .

    ES              reduce using rule 27 (decl -> 1adecl .)
    FCLOSE          reduce using rule 27 (decl -> 1adecl .)


state 26

    (28) decl -> lvdecl .

    ES              reduce using rule 28 (decl -> lvdecl .)
    FCLOSE          reduce using rule 28 (decl -> lvdecl .)


state 27

    (29) decl -> avdecl .

    ES              reduce using rule 29 (decl -> avdecl .)
    FCLOSE          reduce using rule 29 (decl -> avdecl .)


state 28

    (30) cdecl -> cldecl .

    ES              reduce using rule 30 (cdecl -> cldecl .)
    FCLOSE          reduce using rule 30 (cdecl -> cldecl .)


state 29

    (31) cdecl -> cadecl .

    ES              reduce using rule 31 (cdecl -> cadecl .)
    FCLOSE          reduce using rule 31 (cdecl -> cadecl .)


state 30

    (20) group -> FOPEN . lines line FCLOSE
    (21) group -> FOPEN . lines FCLOSE
    (22) lines -> . lines line es
    (23) lines -> .

    FCLOSE          reduce using rule 23 (lines -> .)
    PRINT           reduce using rule 23 (lines -> .)
    ID              reduce using rule 23 (lines -> .)
    EXTEND1         reduce using rule 23 (lines -> .)
    EXTEND2         reduce using rule 23 (lines -> .)
    UNDO            reduce using rule 23 (lines -> .)
    SOPEN           reduce using rule 23 (lines -> .)
    FOPEN           reduce using rule 23 (lines -> .)
    ACONST          reduce using rule 23 (lines -> .)
    LCONST          reduce using rule 23 (lines -> .)
    NOT             reduce using rule 23 (lines -> .)
    INCDEC          reduce using rule 23 (lines -> .)
    OPEN            reduce using rule 23 (lines -> .)
    IF              reduce using rule 23 (lines -> .)
    WHILE           reduce using rule 23 (lines -> .)
    L2ARR           reduce using rule 23 (lines -> .)
    A2ARR           reduce using rule 23 (lines -> .)
    L1ARR           reduce using rule 23 (lines -> .)
    A1ARR           reduce using rule 23 (lines -> .)
    LVAR            reduce using rule 23 (lines -> .)
    AVAR            reduce using rule 23 (lines -> .)
    CLVAR           reduce using rule 23 (lines -> .)
    CAVAR           reduce using rule 23 (lines -> .)
    MOVE            reduce using rule 23 (lines -> .)
    GET             reduce using rule 23 (lines -> .)
    PUSH            reduce using rule 23 (lines -> .)
    SIZE1           reduce using rule 23 (lines -> .)
    SIZE2           reduce using rule 23 (lines -> .)
    ES              reduce using rule 23 (lines -> .)

    lines                          shift and go to state 71

state 31

    (59) expr -> oper .

    GTLT            reduce using rule 59 (expr -> oper .)
    OR              reduce using rule 59 (expr -> oper .)
    ES              reduce using rule 59 (expr -> oper .)
    CLOSE           reduce using rule 59 (expr -> oper .)
    PRINT           reduce using rule 59 (expr -> oper .)
    ID              reduce using rule 59 (expr -> oper .)
    EXTEND1         reduce using rule 59 (expr -> oper .)
    EXTEND2         reduce using rule 59 (expr -> oper .)
    UNDO            reduce using rule 59 (expr -> oper .)
    FOPEN           reduce using rule 59 (expr -> oper .)
    ACONST          reduce using rule 59 (expr -> oper .)
    LCONST          reduce using rule 59 (expr -> oper .)
    NOT             reduce using rule 59 (expr -> oper .)
    INCDEC          reduce using rule 59 (expr -> oper .)
    OPEN            reduce using rule 59 (expr -> oper .)
    MOVE            reduce using rule 59 (expr -> oper .)
    GET             reduce using rule 59 (expr -> oper .)
    PUSH            reduce using rule 59 (expr -> oper .)
    SIZE1           reduce using rule 59 (expr -> oper .)
    SIZE2           reduce using rule 59 (expr -> oper .)
    DO              reduce using rule 59 (expr -> oper .)
    FUNCTION        reduce using rule 59 (expr -> oper .)
    COMA            reduce using rule 59 (expr -> oper .)
    FCLOSE          reduce using rule 59 (expr -> oper .)
    ELSE            reduce using rule 59 (expr -> oper .)
    SCLOSE          reduce using rule 59 (expr -> oper .)
    COMD            reduce using rule 59 (expr -> oper .)


state 32

    (60) expr -> ACONST .

    GTLT            reduce using rule 60 (expr -> ACONST .)
    OR              reduce using rule 60 (expr -> ACONST .)
    ES              reduce using rule 60 (expr -> ACONST .)
    CLOSE           reduce using rule 60 (expr -> ACONST .)
    PRINT           reduce using rule 60 (expr -> ACONST .)
    ID              reduce using rule 60 (expr -> ACONST .)
    EXTEND1         reduce using rule 60 (expr -> ACONST .)
    EXTEND2         reduce using rule 60 (expr -> ACONST .)
    UNDO            reduce using rule 60 (expr -> ACONST .)
    FOPEN           reduce using rule 60 (expr -> ACONST .)
    ACONST          reduce using rule 60 (expr -> ACONST .)
    LCONST          reduce using rule 60 (expr -> ACONST .)
    NOT             reduce using rule 60 (expr -> ACONST .)
    INCDEC          reduce using rule 60 (expr -> ACONST .)
    OPEN            reduce using rule 60 (expr -> ACONST .)
    MOVE            reduce using rule 60 (expr -> ACONST .)
    GET             reduce using rule 60 (expr -> ACONST .)
    PUSH            reduce using rule 60 (expr -> ACONST .)
    SIZE1           reduce using rule 60 (expr -> ACONST .)
    SIZE2           reduce using rule 60 (expr -> ACONST .)
    DO              reduce using rule 60 (expr -> ACONST .)
    FUNCTION        reduce using rule 60 (expr -> ACONST .)
    COMA            reduce using rule 60 (expr -> ACONST .)
    FCLOSE          reduce using rule 60 (expr -> ACONST .)
    ELSE            reduce using rule 60 (expr -> ACONST .)
    SCLOSE          reduce using rule 60 (expr -> ACONST .)
    COMD            reduce using rule 60 (expr -> ACONST .)


state 33

    (61) expr -> LCONST .

    GTLT            reduce using rule 61 (expr -> LCONST .)
    OR              reduce using rule 61 (expr -> LCONST .)
    ES              reduce using rule 61 (expr -> LCONST .)
    CLOSE           reduce using rule 61 (expr -> LCONST .)
    PRINT           reduce using rule 61 (expr -> LCONST .)
    ID              reduce using rule 61 (expr -> LCONST .)
    EXTEND1         reduce using rule 61 (expr -> LCONST .)
    EXTEND2         reduce using rule 61 (expr -> LCONST .)
    UNDO            reduce using rule 61 (expr -> LCONST .)
    FOPEN           reduce using rule 61 (expr -> LCONST .)
    ACONST          reduce using rule 61 (expr -> LCONST .)
    LCONST          reduce using rule 61 (expr -> LCONST .)
    NOT             reduce using rule 61 (expr -> LCONST .)
    INCDEC          reduce using rule 61 (expr -> LCONST .)
    OPEN            reduce using rule 61 (expr -> LCONST .)
    MOVE            reduce using rule 61 (expr -> LCONST .)
    GET             reduce using rule 61 (expr -> LCONST .)
    PUSH            reduce using rule 61 (expr -> LCONST .)
    SIZE1           reduce using rule 61 (expr -> LCONST .)
    SIZE2           reduce using rule 61 (expr -> LCONST .)
    DO              reduce using rule 61 (expr -> LCONST .)
    FUNCTION        reduce using rule 61 (expr -> LCONST .)
    COMA            reduce using rule 61 (expr -> LCONST .)
    FCLOSE          reduce using rule 61 (expr -> LCONST .)
    ELSE            reduce using rule 61 (expr -> LCONST .)
    SCLOSE          reduce using rule 61 (expr -> LCONST .)
    COMD            reduce using rule 61 (expr -> LCONST .)


state 34

    (63) expr -> NOT . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 72
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 35

    (64) expr -> INCDEC . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 73
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 36

    (78) cond -> IF . expr sent else
    (79) cond -> IF . expr group else
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 74
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 37

    (83) loop -> WHILE . expr DO sent
    (84) loop -> WHILE . expr DO group
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 75
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 38

    (42) 2ldecl -> L2ARR . ID
    (43) 2ldecl -> L2ARR . ID EQ SOPEN arrs SCLOSE

    ID              shift and go to state 76


state 39

    (44) 2adecl -> A2ARR . ID
    (45) 2adecl -> A2ARR . ID EQ SOPEN arrs SCLOSE

    ID              shift and go to state 77


state 40

    (38) 1ldecl -> L1ARR . ID
    (39) 1ldecl -> L1ARR . ID EQ SOPEN vals SCLOSE

    ID              shift and go to state 78


state 41

    (40) 1adecl -> A1ARR . ID
    (41) 1adecl -> A1ARR . ID EQ SOPEN vals SCLOSE

    ID              shift and go to state 79


state 42

    (34) lvdecl -> LVAR . ID
    (35) lvdecl -> LVAR . ID EQ expr

    ID              shift and go to state 80


state 43

    (36) avdecl -> AVAR . ID
    (37) avdecl -> AVAR . ID EQ expr

    ID              shift and go to state 81


state 44

    (32) cldecl -> CLVAR . ID EQ expr

    ID              shift and go to state 82


state 45

    (33) cadecl -> CAVAR . ID EQ expr

    ID              shift and go to state 83


state 46

    (68) oper -> MOVE .

    GTLT            reduce using rule 68 (oper -> MOVE .)
    OR              reduce using rule 68 (oper -> MOVE .)
    ES              reduce using rule 68 (oper -> MOVE .)
    CLOSE           reduce using rule 68 (oper -> MOVE .)
    PRINT           reduce using rule 68 (oper -> MOVE .)
    ID              reduce using rule 68 (oper -> MOVE .)
    EXTEND1         reduce using rule 68 (oper -> MOVE .)
    EXTEND2         reduce using rule 68 (oper -> MOVE .)
    UNDO            reduce using rule 68 (oper -> MOVE .)
    FOPEN           reduce using rule 68 (oper -> MOVE .)
    ACONST          reduce using rule 68 (oper -> MOVE .)
    LCONST          reduce using rule 68 (oper -> MOVE .)
    NOT             reduce using rule 68 (oper -> MOVE .)
    INCDEC          reduce using rule 68 (oper -> MOVE .)
    OPEN            reduce using rule 68 (oper -> MOVE .)
    MOVE            reduce using rule 68 (oper -> MOVE .)
    GET             reduce using rule 68 (oper -> MOVE .)
    PUSH            reduce using rule 68 (oper -> MOVE .)
    SIZE1           reduce using rule 68 (oper -> MOVE .)
    SIZE2           reduce using rule 68 (oper -> MOVE .)
    DO              reduce using rule 68 (oper -> MOVE .)
    FUNCTION        reduce using rule 68 (oper -> MOVE .)
    COMA            reduce using rule 68 (oper -> MOVE .)
    FCLOSE          reduce using rule 68 (oper -> MOVE .)
    ELSE            reduce using rule 68 (oper -> MOVE .)
    SCLOSE          reduce using rule 68 (oper -> MOVE .)
    COMD            reduce using rule 68 (oper -> MOVE .)


state 47

    (69) oper -> GET .

    GTLT            reduce using rule 69 (oper -> GET .)
    OR              reduce using rule 69 (oper -> GET .)
    ES              reduce using rule 69 (oper -> GET .)
    CLOSE           reduce using rule 69 (oper -> GET .)
    PRINT           reduce using rule 69 (oper -> GET .)
    ID              reduce using rule 69 (oper -> GET .)
    EXTEND1         reduce using rule 69 (oper -> GET .)
    EXTEND2         reduce using rule 69 (oper -> GET .)
    UNDO            reduce using rule 69 (oper -> GET .)
    FOPEN           reduce using rule 69 (oper -> GET .)
    ACONST          reduce using rule 69 (oper -> GET .)
    LCONST          reduce using rule 69 (oper -> GET .)
    NOT             reduce using rule 69 (oper -> GET .)
    INCDEC          reduce using rule 69 (oper -> GET .)
    OPEN            reduce using rule 69 (oper -> GET .)
    MOVE            reduce using rule 69 (oper -> GET .)
    GET             reduce using rule 69 (oper -> GET .)
    PUSH            reduce using rule 69 (oper -> GET .)
    SIZE1           reduce using rule 69 (oper -> GET .)
    SIZE2           reduce using rule 69 (oper -> GET .)
    DO              reduce using rule 69 (oper -> GET .)
    FUNCTION        reduce using rule 69 (oper -> GET .)
    COMA            reduce using rule 69 (oper -> GET .)
    FCLOSE          reduce using rule 69 (oper -> GET .)
    ELSE            reduce using rule 69 (oper -> GET .)
    SCLOSE          reduce using rule 69 (oper -> GET .)
    COMD            reduce using rule 69 (oper -> GET .)


state 48

    (70) oper -> PUSH .

    GTLT            reduce using rule 70 (oper -> PUSH .)
    OR              reduce using rule 70 (oper -> PUSH .)
    ES              reduce using rule 70 (oper -> PUSH .)
    CLOSE           reduce using rule 70 (oper -> PUSH .)
    PRINT           reduce using rule 70 (oper -> PUSH .)
    ID              reduce using rule 70 (oper -> PUSH .)
    EXTEND1         reduce using rule 70 (oper -> PUSH .)
    EXTEND2         reduce using rule 70 (oper -> PUSH .)
    UNDO            reduce using rule 70 (oper -> PUSH .)
    FOPEN           reduce using rule 70 (oper -> PUSH .)
    ACONST          reduce using rule 70 (oper -> PUSH .)
    LCONST          reduce using rule 70 (oper -> PUSH .)
    NOT             reduce using rule 70 (oper -> PUSH .)
    INCDEC          reduce using rule 70 (oper -> PUSH .)
    OPEN            reduce using rule 70 (oper -> PUSH .)
    MOVE            reduce using rule 70 (oper -> PUSH .)
    GET             reduce using rule 70 (oper -> PUSH .)
    PUSH            reduce using rule 70 (oper -> PUSH .)
    SIZE1           reduce using rule 70 (oper -> PUSH .)
    SIZE2           reduce using rule 70 (oper -> PUSH .)
    DO              reduce using rule 70 (oper -> PUSH .)
    FUNCTION        reduce using rule 70 (oper -> PUSH .)
    COMA            reduce using rule 70 (oper -> PUSH .)
    FCLOSE          reduce using rule 70 (oper -> PUSH .)
    ELSE            reduce using rule 70 (oper -> PUSH .)
    SCLOSE          reduce using rule 70 (oper -> PUSH .)
    COMD            reduce using rule 70 (oper -> PUSH .)


state 49

    (71) oper -> SIZE1 . ID

    ID              shift and go to state 84


state 50

    (72) oper -> SIZE2 . ID expr

    ID              shift and go to state 85


state 51

    (1) prog -> prog line es .
    (4) es -> es . es
    (4) es -> . es es
    (5) es -> . ES

  ! shift/reduce conflict for ES resolved as shift
    PRINT           reduce using rule 1 (prog -> prog line es .)
    ID              reduce using rule 1 (prog -> prog line es .)
    EXTEND1         reduce using rule 1 (prog -> prog line es .)
    EXTEND2         reduce using rule 1 (prog -> prog line es .)
    UNDO            reduce using rule 1 (prog -> prog line es .)
    SOPEN           reduce using rule 1 (prog -> prog line es .)
    FOPEN           reduce using rule 1 (prog -> prog line es .)
    ACONST          reduce using rule 1 (prog -> prog line es .)
    LCONST          reduce using rule 1 (prog -> prog line es .)
    NOT             reduce using rule 1 (prog -> prog line es .)
    INCDEC          reduce using rule 1 (prog -> prog line es .)
    OPEN            reduce using rule 1 (prog -> prog line es .)
    IF              reduce using rule 1 (prog -> prog line es .)
    WHILE           reduce using rule 1 (prog -> prog line es .)
    L2ARR           reduce using rule 1 (prog -> prog line es .)
    A2ARR           reduce using rule 1 (prog -> prog line es .)
    L1ARR           reduce using rule 1 (prog -> prog line es .)
    A1ARR           reduce using rule 1 (prog -> prog line es .)
    LVAR            reduce using rule 1 (prog -> prog line es .)
    AVAR            reduce using rule 1 (prog -> prog line es .)
    CLVAR           reduce using rule 1 (prog -> prog line es .)
    CAVAR           reduce using rule 1 (prog -> prog line es .)
    MOVE            reduce using rule 1 (prog -> prog line es .)
    GET             reduce using rule 1 (prog -> prog line es .)
    PUSH            reduce using rule 1 (prog -> prog line es .)
    SIZE1           reduce using rule 1 (prog -> prog line es .)
    SIZE2           reduce using rule 1 (prog -> prog line es .)
    $end            reduce using rule 1 (prog -> prog line es .)
    ES              shift and go to state 52

  ! ES              [ reduce using rule 1 (prog -> prog line es .) ]

    es                             shift and go to state 86

state 52

    (5) es -> ES .

    ES              reduce using rule 5 (es -> ES .)
    PRINT           reduce using rule 5 (es -> ES .)
    ID              reduce using rule 5 (es -> ES .)
    EXTEND1         reduce using rule 5 (es -> ES .)
    EXTEND2         reduce using rule 5 (es -> ES .)
    UNDO            reduce using rule 5 (es -> ES .)
    SOPEN           reduce using rule 5 (es -> ES .)
    FOPEN           reduce using rule 5 (es -> ES .)
    ACONST          reduce using rule 5 (es -> ES .)
    LCONST          reduce using rule 5 (es -> ES .)
    NOT             reduce using rule 5 (es -> ES .)
    INCDEC          reduce using rule 5 (es -> ES .)
    OPEN            reduce using rule 5 (es -> ES .)
    IF              reduce using rule 5 (es -> ES .)
    WHILE           reduce using rule 5 (es -> ES .)
    L2ARR           reduce using rule 5 (es -> ES .)
    A2ARR           reduce using rule 5 (es -> ES .)
    L1ARR           reduce using rule 5 (es -> ES .)
    A1ARR           reduce using rule 5 (es -> ES .)
    LVAR            reduce using rule 5 (es -> ES .)
    AVAR            reduce using rule 5 (es -> ES .)
    CLVAR           reduce using rule 5 (es -> ES .)
    CAVAR           reduce using rule 5 (es -> ES .)
    MOVE            reduce using rule 5 (es -> ES .)
    GET             reduce using rule 5 (es -> ES .)
    PUSH            reduce using rule 5 (es -> ES .)
    SIZE1           reduce using rule 5 (es -> ES .)
    SIZE2           reduce using rule 5 (es -> ES .)
    $end            reduce using rule 5 (es -> ES .)
    FCLOSE          reduce using rule 5 (es -> ES .)


state 53

    (2) prog -> prog fdecl es .
    (4) es -> es . es
    (4) es -> . es es
    (5) es -> . ES

  ! shift/reduce conflict for ES resolved as shift
    PRINT           reduce using rule 2 (prog -> prog fdecl es .)
    ID              reduce using rule 2 (prog -> prog fdecl es .)
    EXTEND1         reduce using rule 2 (prog -> prog fdecl es .)
    EXTEND2         reduce using rule 2 (prog -> prog fdecl es .)
    UNDO            reduce using rule 2 (prog -> prog fdecl es .)
    SOPEN           reduce using rule 2 (prog -> prog fdecl es .)
    FOPEN           reduce using rule 2 (prog -> prog fdecl es .)
    ACONST          reduce using rule 2 (prog -> prog fdecl es .)
    LCONST          reduce using rule 2 (prog -> prog fdecl es .)
    NOT             reduce using rule 2 (prog -> prog fdecl es .)
    INCDEC          reduce using rule 2 (prog -> prog fdecl es .)
    OPEN            reduce using rule 2 (prog -> prog fdecl es .)
    IF              reduce using rule 2 (prog -> prog fdecl es .)
    WHILE           reduce using rule 2 (prog -> prog fdecl es .)
    L2ARR           reduce using rule 2 (prog -> prog fdecl es .)
    A2ARR           reduce using rule 2 (prog -> prog fdecl es .)
    L1ARR           reduce using rule 2 (prog -> prog fdecl es .)
    A1ARR           reduce using rule 2 (prog -> prog fdecl es .)
    LVAR            reduce using rule 2 (prog -> prog fdecl es .)
    AVAR            reduce using rule 2 (prog -> prog fdecl es .)
    CLVAR           reduce using rule 2 (prog -> prog fdecl es .)
    CAVAR           reduce using rule 2 (prog -> prog fdecl es .)
    MOVE            reduce using rule 2 (prog -> prog fdecl es .)
    GET             reduce using rule 2 (prog -> prog fdecl es .)
    PUSH            reduce using rule 2 (prog -> prog fdecl es .)
    SIZE1           reduce using rule 2 (prog -> prog fdecl es .)
    SIZE2           reduce using rule 2 (prog -> prog fdecl es .)
    $end            reduce using rule 2 (prog -> prog fdecl es .)
    ES              shift and go to state 52

  ! ES              [ reduce using rule 2 (prog -> prog fdecl es .) ]

    es                             shift and go to state 86

state 54

    (52) fdecl -> fovars FUNCTION . ID fivars group

    ID              shift and go to state 87


state 55

    (14) sent -> ID EQ . expr
    (53) fovars -> ID EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 88
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 56

    (74) access -> ID OPEN . expr COMA expr CLOSE
    (75) access -> ID OPEN . expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 89
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 57

    (13) sent -> PRINT ID .

    ES              reduce using rule 13 (sent -> PRINT ID .)
    FCLOSE          reduce using rule 13 (sent -> PRINT ID .)
    ELSE            reduce using rule 13 (sent -> PRINT ID .)


state 58

    (65) expr -> expr GTLT . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 90
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 59

    (66) expr -> expr OR . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 91
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 60

    (15) sent -> access EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    access                         shift and go to state 70
    expr                           shift and go to state 92
    oper                           shift and go to state 31

state 61

    (16) sent -> EXTEND1 ID . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 93
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 62

    (17) sent -> EXTEND2 ID . expr expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 94
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 63

    (85) fcall -> SOPEN vars . SCLOSE EQ ID OPEN pars CLOSE

    SCLOSE          shift and go to state 95


state 64

    (86) vars -> ID . COMA vars
    (90) vars -> ID .
    (56) fvars -> ID . EQ expr
    (57) fvars -> ID . EQ expr COMA fvars
    (74) access -> ID . OPEN expr COMA expr CLOSE
    (75) access -> ID . OPEN expr CLOSE

    COMA            shift and go to state 96
    SCLOSE          reduce using rule 90 (vars -> ID .)
    EQ              shift and go to state 97
    OPEN            shift and go to state 56


state 65

    (54) fovars -> SOPEN fvars . SCLOSE

    SCLOSE          shift and go to state 98


state 66

    (87) vars -> COMA . vars
    (86) vars -> . ID COMA vars
    (87) vars -> . COMA vars
    (88) vars -> . access COMA vars
    (89) vars -> . access
    (90) vars -> . ID
    (91) vars -> .
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ID              shift and go to state 100
    COMA            shift and go to state 66
    SCLOSE          reduce using rule 91 (vars -> .)

    vars                           shift and go to state 99
    access                         shift and go to state 67

state 67

    (88) vars -> access . COMA vars
    (89) vars -> access .

    COMA            shift and go to state 101
    SCLOSE          reduce using rule 89 (vars -> access .)


state 68

    (67) expr -> OPEN expr . CLOSE
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    CLOSE           shift and go to state 102
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 69

    (62) expr -> ID .
    (74) access -> ID . OPEN expr COMA expr CLOSE
    (75) access -> ID . OPEN expr CLOSE

  ! shift/reduce conflict for OPEN resolved as shift
    CLOSE           reduce using rule 62 (expr -> ID .)
    GTLT            reduce using rule 62 (expr -> ID .)
    OR              reduce using rule 62 (expr -> ID .)
    ES              reduce using rule 62 (expr -> ID .)
    PRINT           reduce using rule 62 (expr -> ID .)
    ID              reduce using rule 62 (expr -> ID .)
    EXTEND1         reduce using rule 62 (expr -> ID .)
    EXTEND2         reduce using rule 62 (expr -> ID .)
    UNDO            reduce using rule 62 (expr -> ID .)
    FOPEN           reduce using rule 62 (expr -> ID .)
    ACONST          reduce using rule 62 (expr -> ID .)
    LCONST          reduce using rule 62 (expr -> ID .)
    NOT             reduce using rule 62 (expr -> ID .)
    INCDEC          reduce using rule 62 (expr -> ID .)
    MOVE            reduce using rule 62 (expr -> ID .)
    GET             reduce using rule 62 (expr -> ID .)
    PUSH            reduce using rule 62 (expr -> ID .)
    SIZE1           reduce using rule 62 (expr -> ID .)
    SIZE2           reduce using rule 62 (expr -> ID .)
    DO              reduce using rule 62 (expr -> ID .)
    FUNCTION        reduce using rule 62 (expr -> ID .)
    COMA            reduce using rule 62 (expr -> ID .)
    FCLOSE          reduce using rule 62 (expr -> ID .)
    ELSE            reduce using rule 62 (expr -> ID .)
    SCLOSE          reduce using rule 62 (expr -> ID .)
    COMD            reduce using rule 62 (expr -> ID .)
    OPEN            shift and go to state 56

  ! OPEN            [ reduce using rule 62 (expr -> ID .) ]


state 70

    (73) oper -> access .

    CLOSE           reduce using rule 73 (oper -> access .)
    GTLT            reduce using rule 73 (oper -> access .)
    OR              reduce using rule 73 (oper -> access .)
    ES              reduce using rule 73 (oper -> access .)
    PRINT           reduce using rule 73 (oper -> access .)
    ID              reduce using rule 73 (oper -> access .)
    EXTEND1         reduce using rule 73 (oper -> access .)
    EXTEND2         reduce using rule 73 (oper -> access .)
    UNDO            reduce using rule 73 (oper -> access .)
    FOPEN           reduce using rule 73 (oper -> access .)
    ACONST          reduce using rule 73 (oper -> access .)
    LCONST          reduce using rule 73 (oper -> access .)
    NOT             reduce using rule 73 (oper -> access .)
    INCDEC          reduce using rule 73 (oper -> access .)
    OPEN            reduce using rule 73 (oper -> access .)
    MOVE            reduce using rule 73 (oper -> access .)
    GET             reduce using rule 73 (oper -> access .)
    PUSH            reduce using rule 73 (oper -> access .)
    SIZE1           reduce using rule 73 (oper -> access .)
    SIZE2           reduce using rule 73 (oper -> access .)
    DO              reduce using rule 73 (oper -> access .)
    FUNCTION        reduce using rule 73 (oper -> access .)
    COMA            reduce using rule 73 (oper -> access .)
    FCLOSE          reduce using rule 73 (oper -> access .)
    ELSE            reduce using rule 73 (oper -> access .)
    SCLOSE          reduce using rule 73 (oper -> access .)
    COMD            reduce using rule 73 (oper -> access .)


state 71

    (20) group -> FOPEN lines . line FCLOSE
    (21) group -> FOPEN lines . FCLOSE
    (22) lines -> lines . line es
    (6) line -> . sent
    (7) line -> . logic
    (8) line -> . fcall
    (9) line -> . decl
    (10) line -> . cdecl
    (11) line -> . group
    (12) line -> .
    (13) sent -> . PRINT ID
    (14) sent -> . ID EQ expr
    (15) sent -> . access EQ expr
    (16) sent -> . EXTEND1 ID expr
    (17) sent -> . EXTEND2 ID expr expr
    (18) sent -> . expr
    (19) sent -> . UNDO
    (76) logic -> . cond
    (77) logic -> . loop
    (85) fcall -> . SOPEN vars SCLOSE EQ ID OPEN pars CLOSE
    (24) decl -> . 2ldecl
    (25) decl -> . 2adecl
    (26) decl -> . 1ldecl
    (27) decl -> . 1adecl
    (28) decl -> . lvdecl
    (29) decl -> . avdecl
    (30) cdecl -> . cldecl
    (31) cdecl -> . cadecl
    (20) group -> . FOPEN lines line FCLOSE
    (21) group -> . FOPEN lines FCLOSE
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (78) cond -> . IF expr sent else
    (79) cond -> . IF expr group else
    (83) loop -> . WHILE expr DO sent
    (84) loop -> . WHILE expr DO group
    (42) 2ldecl -> . L2ARR ID
    (43) 2ldecl -> . L2ARR ID EQ SOPEN arrs SCLOSE
    (44) 2adecl -> . A2ARR ID
    (45) 2adecl -> . A2ARR ID EQ SOPEN arrs SCLOSE
    (38) 1ldecl -> . L1ARR ID
    (39) 1ldecl -> . L1ARR ID EQ SOPEN vals SCLOSE
    (40) 1adecl -> . A1ARR ID
    (41) 1adecl -> . A1ARR ID EQ SOPEN vals SCLOSE
    (34) lvdecl -> . LVAR ID
    (35) lvdecl -> . LVAR ID EQ expr
    (36) avdecl -> . AVAR ID
    (37) avdecl -> . AVAR ID EQ expr
    (32) cldecl -> . CLVAR ID EQ expr
    (33) cadecl -> . CAVAR ID EQ expr
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access

  ! shift/reduce conflict for FCLOSE resolved as shift
    FCLOSE          shift and go to state 104
    ES              reduce using rule 12 (line -> .)
    PRINT           shift and go to state 12
    ID              shift and go to state 105
    EXTEND1         shift and go to state 15
    EXTEND2         shift and go to state 16
    UNDO            shift and go to state 17
    SOPEN           shift and go to state 106
    FOPEN           shift and go to state 30
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    L2ARR           shift and go to state 38
    A2ARR           shift and go to state 39
    L1ARR           shift and go to state 40
    A1ARR           shift and go to state 41
    LVAR            shift and go to state 42
    AVAR            shift and go to state 43
    CLVAR           shift and go to state 44
    CAVAR           shift and go to state 45
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

  ! FCLOSE          [ reduce using rule 12 (line -> .) ]

    line                           shift and go to state 103
    sent                           shift and go to state 4
    logic                          shift and go to state 5
    fcall                          shift and go to state 6
    decl                           shift and go to state 7
    cdecl                          shift and go to state 8
    group                          shift and go to state 9
    expr                           shift and go to state 13
    access                         shift and go to state 14
    cond                           shift and go to state 18
    loop                           shift and go to state 19
    2ldecl                         shift and go to state 22
    2adecl                         shift and go to state 23
    1ldecl                         shift and go to state 24
    1adecl                         shift and go to state 25
    lvdecl                         shift and go to state 26
    avdecl                         shift and go to state 27
    cldecl                         shift and go to state 28
    cadecl                         shift and go to state 29
    oper                           shift and go to state 31

state 72

    (63) expr -> NOT expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

  ! shift/reduce conflict for GTLT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ES              reduce using rule 63 (expr -> NOT expr .)
    CLOSE           reduce using rule 63 (expr -> NOT expr .)
    PRINT           reduce using rule 63 (expr -> NOT expr .)
    ID              reduce using rule 63 (expr -> NOT expr .)
    EXTEND1         reduce using rule 63 (expr -> NOT expr .)
    EXTEND2         reduce using rule 63 (expr -> NOT expr .)
    UNDO            reduce using rule 63 (expr -> NOT expr .)
    FOPEN           reduce using rule 63 (expr -> NOT expr .)
    ACONST          reduce using rule 63 (expr -> NOT expr .)
    LCONST          reduce using rule 63 (expr -> NOT expr .)
    NOT             reduce using rule 63 (expr -> NOT expr .)
    INCDEC          reduce using rule 63 (expr -> NOT expr .)
    OPEN            reduce using rule 63 (expr -> NOT expr .)
    MOVE            reduce using rule 63 (expr -> NOT expr .)
    GET             reduce using rule 63 (expr -> NOT expr .)
    PUSH            reduce using rule 63 (expr -> NOT expr .)
    SIZE1           reduce using rule 63 (expr -> NOT expr .)
    SIZE2           reduce using rule 63 (expr -> NOT expr .)
    DO              reduce using rule 63 (expr -> NOT expr .)
    FUNCTION        reduce using rule 63 (expr -> NOT expr .)
    COMA            reduce using rule 63 (expr -> NOT expr .)
    FCLOSE          reduce using rule 63 (expr -> NOT expr .)
    ELSE            reduce using rule 63 (expr -> NOT expr .)
    SCLOSE          reduce using rule 63 (expr -> NOT expr .)
    COMD            reduce using rule 63 (expr -> NOT expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59

  ! GTLT            [ reduce using rule 63 (expr -> NOT expr .) ]
  ! OR              [ reduce using rule 63 (expr -> NOT expr .) ]


state 73

    (64) expr -> INCDEC expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

  ! shift/reduce conflict for GTLT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ES              reduce using rule 64 (expr -> INCDEC expr .)
    CLOSE           reduce using rule 64 (expr -> INCDEC expr .)
    PRINT           reduce using rule 64 (expr -> INCDEC expr .)
    ID              reduce using rule 64 (expr -> INCDEC expr .)
    EXTEND1         reduce using rule 64 (expr -> INCDEC expr .)
    EXTEND2         reduce using rule 64 (expr -> INCDEC expr .)
    UNDO            reduce using rule 64 (expr -> INCDEC expr .)
    FOPEN           reduce using rule 64 (expr -> INCDEC expr .)
    ACONST          reduce using rule 64 (expr -> INCDEC expr .)
    LCONST          reduce using rule 64 (expr -> INCDEC expr .)
    NOT             reduce using rule 64 (expr -> INCDEC expr .)
    INCDEC          reduce using rule 64 (expr -> INCDEC expr .)
    OPEN            reduce using rule 64 (expr -> INCDEC expr .)
    MOVE            reduce using rule 64 (expr -> INCDEC expr .)
    GET             reduce using rule 64 (expr -> INCDEC expr .)
    PUSH            reduce using rule 64 (expr -> INCDEC expr .)
    SIZE1           reduce using rule 64 (expr -> INCDEC expr .)
    SIZE2           reduce using rule 64 (expr -> INCDEC expr .)
    DO              reduce using rule 64 (expr -> INCDEC expr .)
    FUNCTION        reduce using rule 64 (expr -> INCDEC expr .)
    COMA            reduce using rule 64 (expr -> INCDEC expr .)
    FCLOSE          reduce using rule 64 (expr -> INCDEC expr .)
    ELSE            reduce using rule 64 (expr -> INCDEC expr .)
    SCLOSE          reduce using rule 64 (expr -> INCDEC expr .)
    COMD            reduce using rule 64 (expr -> INCDEC expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59

  ! GTLT            [ reduce using rule 64 (expr -> INCDEC expr .) ]
  ! OR              [ reduce using rule 64 (expr -> INCDEC expr .) ]


state 74

    (78) cond -> IF expr . sent else
    (79) cond -> IF expr . group else
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr
    (13) sent -> . PRINT ID
    (14) sent -> . ID EQ expr
    (15) sent -> . access EQ expr
    (16) sent -> . EXTEND1 ID expr
    (17) sent -> . EXTEND2 ID expr expr
    (18) sent -> . expr
    (19) sent -> . UNDO
    (20) group -> . FOPEN lines line FCLOSE
    (21) group -> . FOPEN lines FCLOSE
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access

    GTLT            shift and go to state 58
    OR              shift and go to state 59
    PRINT           shift and go to state 12
    ID              shift and go to state 105
    EXTEND1         shift and go to state 15
    EXTEND2         shift and go to state 16
    UNDO            shift and go to state 17
    FOPEN           shift and go to state 30
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 13
    sent                           shift and go to state 107
    group                          shift and go to state 108
    access                         shift and go to state 14
    oper                           shift and go to state 31

state 75

    (83) loop -> WHILE expr . DO sent
    (84) loop -> WHILE expr . DO group
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    DO              shift and go to state 109
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 76

    (42) 2ldecl -> L2ARR ID .
    (43) 2ldecl -> L2ARR ID . EQ SOPEN arrs SCLOSE

    ES              reduce using rule 42 (2ldecl -> L2ARR ID .)
    FCLOSE          reduce using rule 42 (2ldecl -> L2ARR ID .)
    EQ              shift and go to state 110


state 77

    (44) 2adecl -> A2ARR ID .
    (45) 2adecl -> A2ARR ID . EQ SOPEN arrs SCLOSE

    ES              reduce using rule 44 (2adecl -> A2ARR ID .)
    FCLOSE          reduce using rule 44 (2adecl -> A2ARR ID .)
    EQ              shift and go to state 111


state 78

    (38) 1ldecl -> L1ARR ID .
    (39) 1ldecl -> L1ARR ID . EQ SOPEN vals SCLOSE

    ES              reduce using rule 38 (1ldecl -> L1ARR ID .)
    FCLOSE          reduce using rule 38 (1ldecl -> L1ARR ID .)
    EQ              shift and go to state 112


state 79

    (40) 1adecl -> A1ARR ID .
    (41) 1adecl -> A1ARR ID . EQ SOPEN vals SCLOSE

    ES              reduce using rule 40 (1adecl -> A1ARR ID .)
    FCLOSE          reduce using rule 40 (1adecl -> A1ARR ID .)
    EQ              shift and go to state 113


state 80

    (34) lvdecl -> LVAR ID .
    (35) lvdecl -> LVAR ID . EQ expr

    ES              reduce using rule 34 (lvdecl -> LVAR ID .)
    FCLOSE          reduce using rule 34 (lvdecl -> LVAR ID .)
    EQ              shift and go to state 114


state 81

    (36) avdecl -> AVAR ID .
    (37) avdecl -> AVAR ID . EQ expr

    ES              reduce using rule 36 (avdecl -> AVAR ID .)
    FCLOSE          reduce using rule 36 (avdecl -> AVAR ID .)
    EQ              shift and go to state 115


state 82

    (32) cldecl -> CLVAR ID . EQ expr

    EQ              shift and go to state 116


state 83

    (33) cadecl -> CAVAR ID . EQ expr

    EQ              shift and go to state 117


state 84

    (71) oper -> SIZE1 ID .

    GTLT            reduce using rule 71 (oper -> SIZE1 ID .)
    OR              reduce using rule 71 (oper -> SIZE1 ID .)
    ES              reduce using rule 71 (oper -> SIZE1 ID .)
    CLOSE           reduce using rule 71 (oper -> SIZE1 ID .)
    PRINT           reduce using rule 71 (oper -> SIZE1 ID .)
    ID              reduce using rule 71 (oper -> SIZE1 ID .)
    EXTEND1         reduce using rule 71 (oper -> SIZE1 ID .)
    EXTEND2         reduce using rule 71 (oper -> SIZE1 ID .)
    UNDO            reduce using rule 71 (oper -> SIZE1 ID .)
    FOPEN           reduce using rule 71 (oper -> SIZE1 ID .)
    ACONST          reduce using rule 71 (oper -> SIZE1 ID .)
    LCONST          reduce using rule 71 (oper -> SIZE1 ID .)
    NOT             reduce using rule 71 (oper -> SIZE1 ID .)
    INCDEC          reduce using rule 71 (oper -> SIZE1 ID .)
    OPEN            reduce using rule 71 (oper -> SIZE1 ID .)
    MOVE            reduce using rule 71 (oper -> SIZE1 ID .)
    GET             reduce using rule 71 (oper -> SIZE1 ID .)
    PUSH            reduce using rule 71 (oper -> SIZE1 ID .)
    SIZE1           reduce using rule 71 (oper -> SIZE1 ID .)
    SIZE2           reduce using rule 71 (oper -> SIZE1 ID .)
    DO              reduce using rule 71 (oper -> SIZE1 ID .)
    FUNCTION        reduce using rule 71 (oper -> SIZE1 ID .)
    COMA            reduce using rule 71 (oper -> SIZE1 ID .)
    FCLOSE          reduce using rule 71 (oper -> SIZE1 ID .)
    ELSE            reduce using rule 71 (oper -> SIZE1 ID .)
    SCLOSE          reduce using rule 71 (oper -> SIZE1 ID .)
    COMD            reduce using rule 71 (oper -> SIZE1 ID .)


state 85

    (72) oper -> SIZE2 ID . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 118
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 86

    (4) es -> es es .
    (4) es -> es . es
    (4) es -> . es es
    (5) es -> . ES

  ! shift/reduce conflict for ES resolved as shift
    PRINT           reduce using rule 4 (es -> es es .)
    ID              reduce using rule 4 (es -> es es .)
    EXTEND1         reduce using rule 4 (es -> es es .)
    EXTEND2         reduce using rule 4 (es -> es es .)
    UNDO            reduce using rule 4 (es -> es es .)
    SOPEN           reduce using rule 4 (es -> es es .)
    FOPEN           reduce using rule 4 (es -> es es .)
    ACONST          reduce using rule 4 (es -> es es .)
    LCONST          reduce using rule 4 (es -> es es .)
    NOT             reduce using rule 4 (es -> es es .)
    INCDEC          reduce using rule 4 (es -> es es .)
    OPEN            reduce using rule 4 (es -> es es .)
    IF              reduce using rule 4 (es -> es es .)
    WHILE           reduce using rule 4 (es -> es es .)
    L2ARR           reduce using rule 4 (es -> es es .)
    A2ARR           reduce using rule 4 (es -> es es .)
    L1ARR           reduce using rule 4 (es -> es es .)
    A1ARR           reduce using rule 4 (es -> es es .)
    LVAR            reduce using rule 4 (es -> es es .)
    AVAR            reduce using rule 4 (es -> es es .)
    CLVAR           reduce using rule 4 (es -> es es .)
    CAVAR           reduce using rule 4 (es -> es es .)
    MOVE            reduce using rule 4 (es -> es es .)
    GET             reduce using rule 4 (es -> es es .)
    PUSH            reduce using rule 4 (es -> es es .)
    SIZE1           reduce using rule 4 (es -> es es .)
    SIZE2           reduce using rule 4 (es -> es es .)
    $end            reduce using rule 4 (es -> es es .)
    FCLOSE          reduce using rule 4 (es -> es es .)
    ES              shift and go to state 52

  ! ES              [ reduce using rule 4 (es -> es es .) ]

    es                             shift and go to state 86

state 87

    (52) fdecl -> fovars FUNCTION ID . fivars group
    (55) fivars -> . OPEN fvars CLOSE

    OPEN            shift and go to state 120

    fivars                         shift and go to state 119

state 88

    (14) sent -> ID EQ expr .
    (53) fovars -> ID EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 14 (sent -> ID EQ expr .)
    FUNCTION        reduce using rule 53 (fovars -> ID EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 89

    (74) access -> ID OPEN expr . COMA expr CLOSE
    (75) access -> ID OPEN expr . CLOSE
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    COMA            shift and go to state 121
    CLOSE           shift and go to state 122
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 90

    (65) expr -> expr GTLT expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

  ! shift/reduce conflict for GTLT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ES              reduce using rule 65 (expr -> expr GTLT expr .)
    CLOSE           reduce using rule 65 (expr -> expr GTLT expr .)
    PRINT           reduce using rule 65 (expr -> expr GTLT expr .)
    ID              reduce using rule 65 (expr -> expr GTLT expr .)
    EXTEND1         reduce using rule 65 (expr -> expr GTLT expr .)
    EXTEND2         reduce using rule 65 (expr -> expr GTLT expr .)
    UNDO            reduce using rule 65 (expr -> expr GTLT expr .)
    FOPEN           reduce using rule 65 (expr -> expr GTLT expr .)
    ACONST          reduce using rule 65 (expr -> expr GTLT expr .)
    LCONST          reduce using rule 65 (expr -> expr GTLT expr .)
    NOT             reduce using rule 65 (expr -> expr GTLT expr .)
    INCDEC          reduce using rule 65 (expr -> expr GTLT expr .)
    OPEN            reduce using rule 65 (expr -> expr GTLT expr .)
    MOVE            reduce using rule 65 (expr -> expr GTLT expr .)
    GET             reduce using rule 65 (expr -> expr GTLT expr .)
    PUSH            reduce using rule 65 (expr -> expr GTLT expr .)
    SIZE1           reduce using rule 65 (expr -> expr GTLT expr .)
    SIZE2           reduce using rule 65 (expr -> expr GTLT expr .)
    DO              reduce using rule 65 (expr -> expr GTLT expr .)
    FUNCTION        reduce using rule 65 (expr -> expr GTLT expr .)
    COMA            reduce using rule 65 (expr -> expr GTLT expr .)
    FCLOSE          reduce using rule 65 (expr -> expr GTLT expr .)
    ELSE            reduce using rule 65 (expr -> expr GTLT expr .)
    SCLOSE          reduce using rule 65 (expr -> expr GTLT expr .)
    COMD            reduce using rule 65 (expr -> expr GTLT expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59

  ! GTLT            [ reduce using rule 65 (expr -> expr GTLT expr .) ]
  ! OR              [ reduce using rule 65 (expr -> expr GTLT expr .) ]


state 91

    (66) expr -> expr OR expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

  ! shift/reduce conflict for GTLT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ES              reduce using rule 66 (expr -> expr OR expr .)
    CLOSE           reduce using rule 66 (expr -> expr OR expr .)
    PRINT           reduce using rule 66 (expr -> expr OR expr .)
    ID              reduce using rule 66 (expr -> expr OR expr .)
    EXTEND1         reduce using rule 66 (expr -> expr OR expr .)
    EXTEND2         reduce using rule 66 (expr -> expr OR expr .)
    UNDO            reduce using rule 66 (expr -> expr OR expr .)
    FOPEN           reduce using rule 66 (expr -> expr OR expr .)
    ACONST          reduce using rule 66 (expr -> expr OR expr .)
    LCONST          reduce using rule 66 (expr -> expr OR expr .)
    NOT             reduce using rule 66 (expr -> expr OR expr .)
    INCDEC          reduce using rule 66 (expr -> expr OR expr .)
    OPEN            reduce using rule 66 (expr -> expr OR expr .)
    MOVE            reduce using rule 66 (expr -> expr OR expr .)
    GET             reduce using rule 66 (expr -> expr OR expr .)
    PUSH            reduce using rule 66 (expr -> expr OR expr .)
    SIZE1           reduce using rule 66 (expr -> expr OR expr .)
    SIZE2           reduce using rule 66 (expr -> expr OR expr .)
    DO              reduce using rule 66 (expr -> expr OR expr .)
    FUNCTION        reduce using rule 66 (expr -> expr OR expr .)
    COMA            reduce using rule 66 (expr -> expr OR expr .)
    FCLOSE          reduce using rule 66 (expr -> expr OR expr .)
    ELSE            reduce using rule 66 (expr -> expr OR expr .)
    SCLOSE          reduce using rule 66 (expr -> expr OR expr .)
    COMD            reduce using rule 66 (expr -> expr OR expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59

  ! GTLT            [ reduce using rule 66 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 66 (expr -> expr OR expr .) ]


state 92

    (15) sent -> access EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 15 (sent -> access EQ expr .)
    FCLOSE          reduce using rule 15 (sent -> access EQ expr .)
    ELSE            reduce using rule 15 (sent -> access EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 93

    (16) sent -> EXTEND1 ID expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 16 (sent -> EXTEND1 ID expr .)
    FCLOSE          reduce using rule 16 (sent -> EXTEND1 ID expr .)
    ELSE            reduce using rule 16 (sent -> EXTEND1 ID expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 94

    (17) sent -> EXTEND2 ID expr . expr
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    GTLT            shift and go to state 58
    OR              shift and go to state 59
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 123
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 95

    (85) fcall -> SOPEN vars SCLOSE . EQ ID OPEN pars CLOSE

    EQ              shift and go to state 124


state 96

    (86) vars -> ID COMA . vars
    (86) vars -> . ID COMA vars
    (87) vars -> . COMA vars
    (88) vars -> . access COMA vars
    (89) vars -> . access
    (90) vars -> . ID
    (91) vars -> .
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ID              shift and go to state 100
    COMA            shift and go to state 66
    SCLOSE          reduce using rule 91 (vars -> .)

    vars                           shift and go to state 125
    access                         shift and go to state 67

state 97

    (56) fvars -> ID EQ . expr
    (57) fvars -> ID EQ . expr COMA fvars
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 126
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 98

    (54) fovars -> SOPEN fvars SCLOSE .

    FUNCTION        reduce using rule 54 (fovars -> SOPEN fvars SCLOSE .)


state 99

    (87) vars -> COMA vars .

    SCLOSE          reduce using rule 87 (vars -> COMA vars .)


state 100

    (86) vars -> ID . COMA vars
    (90) vars -> ID .
    (74) access -> ID . OPEN expr COMA expr CLOSE
    (75) access -> ID . OPEN expr CLOSE

    COMA            shift and go to state 96
    SCLOSE          reduce using rule 90 (vars -> ID .)
    OPEN            shift and go to state 56


state 101

    (88) vars -> access COMA . vars
    (86) vars -> . ID COMA vars
    (87) vars -> . COMA vars
    (88) vars -> . access COMA vars
    (89) vars -> . access
    (90) vars -> . ID
    (91) vars -> .
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ID              shift and go to state 100
    COMA            shift and go to state 66
    SCLOSE          reduce using rule 91 (vars -> .)

    access                         shift and go to state 67
    vars                           shift and go to state 127

state 102

    (67) expr -> OPEN expr CLOSE .

    GTLT            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    OR              reduce using rule 67 (expr -> OPEN expr CLOSE .)
    ES              reduce using rule 67 (expr -> OPEN expr CLOSE .)
    CLOSE           reduce using rule 67 (expr -> OPEN expr CLOSE .)
    PRINT           reduce using rule 67 (expr -> OPEN expr CLOSE .)
    ID              reduce using rule 67 (expr -> OPEN expr CLOSE .)
    EXTEND1         reduce using rule 67 (expr -> OPEN expr CLOSE .)
    EXTEND2         reduce using rule 67 (expr -> OPEN expr CLOSE .)
    UNDO            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    FOPEN           reduce using rule 67 (expr -> OPEN expr CLOSE .)
    ACONST          reduce using rule 67 (expr -> OPEN expr CLOSE .)
    LCONST          reduce using rule 67 (expr -> OPEN expr CLOSE .)
    NOT             reduce using rule 67 (expr -> OPEN expr CLOSE .)
    INCDEC          reduce using rule 67 (expr -> OPEN expr CLOSE .)
    OPEN            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    MOVE            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    GET             reduce using rule 67 (expr -> OPEN expr CLOSE .)
    PUSH            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    SIZE1           reduce using rule 67 (expr -> OPEN expr CLOSE .)
    SIZE2           reduce using rule 67 (expr -> OPEN expr CLOSE .)
    DO              reduce using rule 67 (expr -> OPEN expr CLOSE .)
    FUNCTION        reduce using rule 67 (expr -> OPEN expr CLOSE .)
    COMA            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    FCLOSE          reduce using rule 67 (expr -> OPEN expr CLOSE .)
    ELSE            reduce using rule 67 (expr -> OPEN expr CLOSE .)
    SCLOSE          reduce using rule 67 (expr -> OPEN expr CLOSE .)
    COMD            reduce using rule 67 (expr -> OPEN expr CLOSE .)


state 103

    (20) group -> FOPEN lines line . FCLOSE
    (22) lines -> lines line . es
    (4) es -> . es es
    (5) es -> . ES

    FCLOSE          shift and go to state 128
    ES              shift and go to state 52

    es                             shift and go to state 129

state 104

    (21) group -> FOPEN lines FCLOSE .

    ES              reduce using rule 21 (group -> FOPEN lines FCLOSE .)
    FCLOSE          reduce using rule 21 (group -> FOPEN lines FCLOSE .)
    ELSE            reduce using rule 21 (group -> FOPEN lines FCLOSE .)


state 105

    (14) sent -> ID . EQ expr
    (74) access -> ID . OPEN expr COMA expr CLOSE
    (75) access -> ID . OPEN expr CLOSE
    (62) expr -> ID .

    EQ              shift and go to state 130
    OPEN            shift and go to state 56
    GTLT            reduce using rule 62 (expr -> ID .)
    OR              reduce using rule 62 (expr -> ID .)
    FCLOSE          reduce using rule 62 (expr -> ID .)
    ES              reduce using rule 62 (expr -> ID .)
    ELSE            reduce using rule 62 (expr -> ID .)


state 106

    (85) fcall -> SOPEN . vars SCLOSE EQ ID OPEN pars CLOSE
    (86) vars -> . ID COMA vars
    (87) vars -> . COMA vars
    (88) vars -> . access COMA vars
    (89) vars -> . access
    (90) vars -> . ID
    (91) vars -> .
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ID              shift and go to state 100
    COMA            shift and go to state 66
    SCLOSE          reduce using rule 91 (vars -> .)

    vars                           shift and go to state 63
    access                         shift and go to state 67

state 107

    (78) cond -> IF expr sent . else
    (80) else -> . ELSE sent
    (81) else -> . ELSE group
    (82) else -> .

    ELSE            shift and go to state 132
    ES              reduce using rule 82 (else -> .)
    FCLOSE          reduce using rule 82 (else -> .)

    else                           shift and go to state 131

state 108

    (79) cond -> IF expr group . else
    (80) else -> . ELSE sent
    (81) else -> . ELSE group
    (82) else -> .

    ELSE            shift and go to state 132
    ES              reduce using rule 82 (else -> .)
    FCLOSE          reduce using rule 82 (else -> .)

    else                           shift and go to state 133

state 109

    (83) loop -> WHILE expr DO . sent
    (84) loop -> WHILE expr DO . group
    (13) sent -> . PRINT ID
    (14) sent -> . ID EQ expr
    (15) sent -> . access EQ expr
    (16) sent -> . EXTEND1 ID expr
    (17) sent -> . EXTEND2 ID expr expr
    (18) sent -> . expr
    (19) sent -> . UNDO
    (20) group -> . FOPEN lines line FCLOSE
    (21) group -> . FOPEN lines FCLOSE
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access

    PRINT           shift and go to state 12
    ID              shift and go to state 105
    EXTEND1         shift and go to state 15
    EXTEND2         shift and go to state 16
    UNDO            shift and go to state 17
    FOPEN           shift and go to state 30
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 13
    sent                           shift and go to state 134
    group                          shift and go to state 135
    access                         shift and go to state 14
    oper                           shift and go to state 31

state 110

    (43) 2ldecl -> L2ARR ID EQ . SOPEN arrs SCLOSE

    SOPEN           shift and go to state 136


state 111

    (45) 2adecl -> A2ARR ID EQ . SOPEN arrs SCLOSE

    SOPEN           shift and go to state 137


state 112

    (39) 1ldecl -> L1ARR ID EQ . SOPEN vals SCLOSE

    SOPEN           shift and go to state 138


state 113

    (41) 1adecl -> A1ARR ID EQ . SOPEN vals SCLOSE

    SOPEN           shift and go to state 139


state 114

    (35) lvdecl -> LVAR ID EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 140
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 115

    (37) avdecl -> AVAR ID EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 141
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 116

    (32) cldecl -> CLVAR ID EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 142
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 117

    (33) cadecl -> CAVAR ID EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 143
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 118

    (72) oper -> SIZE2 ID expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

  ! shift/reduce conflict for GTLT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ES              reduce using rule 72 (oper -> SIZE2 ID expr .)
    CLOSE           reduce using rule 72 (oper -> SIZE2 ID expr .)
    PRINT           reduce using rule 72 (oper -> SIZE2 ID expr .)
    ID              reduce using rule 72 (oper -> SIZE2 ID expr .)
    EXTEND1         reduce using rule 72 (oper -> SIZE2 ID expr .)
    EXTEND2         reduce using rule 72 (oper -> SIZE2 ID expr .)
    UNDO            reduce using rule 72 (oper -> SIZE2 ID expr .)
    FOPEN           reduce using rule 72 (oper -> SIZE2 ID expr .)
    ACONST          reduce using rule 72 (oper -> SIZE2 ID expr .)
    LCONST          reduce using rule 72 (oper -> SIZE2 ID expr .)
    NOT             reduce using rule 72 (oper -> SIZE2 ID expr .)
    INCDEC          reduce using rule 72 (oper -> SIZE2 ID expr .)
    OPEN            reduce using rule 72 (oper -> SIZE2 ID expr .)
    MOVE            reduce using rule 72 (oper -> SIZE2 ID expr .)
    GET             reduce using rule 72 (oper -> SIZE2 ID expr .)
    PUSH            reduce using rule 72 (oper -> SIZE2 ID expr .)
    SIZE1           reduce using rule 72 (oper -> SIZE2 ID expr .)
    SIZE2           reduce using rule 72 (oper -> SIZE2 ID expr .)
    DO              reduce using rule 72 (oper -> SIZE2 ID expr .)
    FUNCTION        reduce using rule 72 (oper -> SIZE2 ID expr .)
    COMA            reduce using rule 72 (oper -> SIZE2 ID expr .)
    FCLOSE          reduce using rule 72 (oper -> SIZE2 ID expr .)
    ELSE            reduce using rule 72 (oper -> SIZE2 ID expr .)
    SCLOSE          reduce using rule 72 (oper -> SIZE2 ID expr .)
    COMD            reduce using rule 72 (oper -> SIZE2 ID expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59

  ! GTLT            [ reduce using rule 72 (oper -> SIZE2 ID expr .) ]
  ! OR              [ reduce using rule 72 (oper -> SIZE2 ID expr .) ]


state 119

    (52) fdecl -> fovars FUNCTION ID fivars . group
    (20) group -> . FOPEN lines line FCLOSE
    (21) group -> . FOPEN lines FCLOSE

    FOPEN           shift and go to state 30

    group                          shift and go to state 144

state 120

    (55) fivars -> OPEN . fvars CLOSE
    (56) fvars -> . ID EQ expr
    (57) fvars -> . ID EQ expr COMA fvars
    (58) fvars -> .

    ID              shift and go to state 146
    CLOSE           reduce using rule 58 (fvars -> .)

    fvars                          shift and go to state 145

state 121

    (74) access -> ID OPEN expr COMA . expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 147
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 122

    (75) access -> ID OPEN expr CLOSE .

    EQ              reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    GTLT            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    OR              reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    ES              reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    COMA            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    SCLOSE          reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    CLOSE           reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    PRINT           reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    ID              reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    EXTEND1         reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    EXTEND2         reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    UNDO            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    FOPEN           reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    ACONST          reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    LCONST          reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    NOT             reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    INCDEC          reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    OPEN            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    MOVE            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    GET             reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    PUSH            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    SIZE1           reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    SIZE2           reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    DO              reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    FUNCTION        reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    FCLOSE          reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    ELSE            reduce using rule 75 (access -> ID OPEN expr CLOSE .)
    COMD            reduce using rule 75 (access -> ID OPEN expr CLOSE .)


state 123

    (17) sent -> EXTEND2 ID expr expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 17 (sent -> EXTEND2 ID expr expr .)
    FCLOSE          reduce using rule 17 (sent -> EXTEND2 ID expr expr .)
    ELSE            reduce using rule 17 (sent -> EXTEND2 ID expr expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 124

    (85) fcall -> SOPEN vars SCLOSE EQ . ID OPEN pars CLOSE

    ID              shift and go to state 148


state 125

    (86) vars -> ID COMA vars .

    SCLOSE          reduce using rule 86 (vars -> ID COMA vars .)


state 126

    (56) fvars -> ID EQ expr .
    (57) fvars -> ID EQ expr . COMA fvars
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    SCLOSE          reduce using rule 56 (fvars -> ID EQ expr .)
    CLOSE           reduce using rule 56 (fvars -> ID EQ expr .)
    COMA            shift and go to state 149
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 127

    (88) vars -> access COMA vars .

    SCLOSE          reduce using rule 88 (vars -> access COMA vars .)


state 128

    (20) group -> FOPEN lines line FCLOSE .

    ES              reduce using rule 20 (group -> FOPEN lines line FCLOSE .)
    FCLOSE          reduce using rule 20 (group -> FOPEN lines line FCLOSE .)
    ELSE            reduce using rule 20 (group -> FOPEN lines line FCLOSE .)


state 129

    (22) lines -> lines line es .
    (4) es -> es . es
    (4) es -> . es es
    (5) es -> . ES

  ! shift/reduce conflict for ES resolved as shift
    FCLOSE          reduce using rule 22 (lines -> lines line es .)
    PRINT           reduce using rule 22 (lines -> lines line es .)
    ID              reduce using rule 22 (lines -> lines line es .)
    EXTEND1         reduce using rule 22 (lines -> lines line es .)
    EXTEND2         reduce using rule 22 (lines -> lines line es .)
    UNDO            reduce using rule 22 (lines -> lines line es .)
    SOPEN           reduce using rule 22 (lines -> lines line es .)
    FOPEN           reduce using rule 22 (lines -> lines line es .)
    ACONST          reduce using rule 22 (lines -> lines line es .)
    LCONST          reduce using rule 22 (lines -> lines line es .)
    NOT             reduce using rule 22 (lines -> lines line es .)
    INCDEC          reduce using rule 22 (lines -> lines line es .)
    OPEN            reduce using rule 22 (lines -> lines line es .)
    IF              reduce using rule 22 (lines -> lines line es .)
    WHILE           reduce using rule 22 (lines -> lines line es .)
    L2ARR           reduce using rule 22 (lines -> lines line es .)
    A2ARR           reduce using rule 22 (lines -> lines line es .)
    L1ARR           reduce using rule 22 (lines -> lines line es .)
    A1ARR           reduce using rule 22 (lines -> lines line es .)
    LVAR            reduce using rule 22 (lines -> lines line es .)
    AVAR            reduce using rule 22 (lines -> lines line es .)
    CLVAR           reduce using rule 22 (lines -> lines line es .)
    CAVAR           reduce using rule 22 (lines -> lines line es .)
    MOVE            reduce using rule 22 (lines -> lines line es .)
    GET             reduce using rule 22 (lines -> lines line es .)
    PUSH            reduce using rule 22 (lines -> lines line es .)
    SIZE1           reduce using rule 22 (lines -> lines line es .)
    SIZE2           reduce using rule 22 (lines -> lines line es .)
    ES              shift and go to state 52

  ! ES              [ reduce using rule 22 (lines -> lines line es .) ]

    es                             shift and go to state 86

state 130

    (14) sent -> ID EQ . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 150
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 131

    (78) cond -> IF expr sent else .

    ES              reduce using rule 78 (cond -> IF expr sent else .)
    FCLOSE          reduce using rule 78 (cond -> IF expr sent else .)


state 132

    (80) else -> ELSE . sent
    (81) else -> ELSE . group
    (13) sent -> . PRINT ID
    (14) sent -> . ID EQ expr
    (15) sent -> . access EQ expr
    (16) sent -> . EXTEND1 ID expr
    (17) sent -> . EXTEND2 ID expr expr
    (18) sent -> . expr
    (19) sent -> . UNDO
    (20) group -> . FOPEN lines line FCLOSE
    (21) group -> . FOPEN lines FCLOSE
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access

    PRINT           shift and go to state 12
    ID              shift and go to state 105
    EXTEND1         shift and go to state 15
    EXTEND2         shift and go to state 16
    UNDO            shift and go to state 17
    FOPEN           shift and go to state 30
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    sent                           shift and go to state 151
    group                          shift and go to state 152
    expr                           shift and go to state 13
    access                         shift and go to state 14
    oper                           shift and go to state 31

state 133

    (79) cond -> IF expr group else .

    ES              reduce using rule 79 (cond -> IF expr group else .)
    FCLOSE          reduce using rule 79 (cond -> IF expr group else .)


state 134

    (83) loop -> WHILE expr DO sent .

    ES              reduce using rule 83 (loop -> WHILE expr DO sent .)
    FCLOSE          reduce using rule 83 (loop -> WHILE expr DO sent .)


state 135

    (84) loop -> WHILE expr DO group .

    ES              reduce using rule 84 (loop -> WHILE expr DO group .)
    FCLOSE          reduce using rule 84 (loop -> WHILE expr DO group .)


state 136

    (43) 2ldecl -> L2ARR ID EQ SOPEN . arrs SCLOSE
    (48) arrs -> . vals COMD arrs
    (49) arrs -> . COMD arrs
    (50) arrs -> . vals
    (51) arrs -> .
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMD            shift and go to state 155
    SCLOSE          reduce using rule 51 (arrs -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    arrs                           shift and go to state 153
    vals                           shift and go to state 154
    expr                           shift and go to state 156
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 137

    (45) 2adecl -> A2ARR ID EQ SOPEN . arrs SCLOSE
    (48) arrs -> . vals COMD arrs
    (49) arrs -> . COMD arrs
    (50) arrs -> . vals
    (51) arrs -> .
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMD            shift and go to state 155
    SCLOSE          reduce using rule 51 (arrs -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    arrs                           shift and go to state 157
    vals                           shift and go to state 154
    expr                           shift and go to state 156
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 138

    (39) 1ldecl -> L1ARR ID EQ SOPEN . vals SCLOSE
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    vals                           shift and go to state 158
    expr                           shift and go to state 156
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 139

    (41) 1adecl -> A1ARR ID EQ SOPEN . vals SCLOSE
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    vals                           shift and go to state 159
    expr                           shift and go to state 156
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 140

    (35) lvdecl -> LVAR ID EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 35 (lvdecl -> LVAR ID EQ expr .)
    FCLOSE          reduce using rule 35 (lvdecl -> LVAR ID EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 141

    (37) avdecl -> AVAR ID EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 37 (avdecl -> AVAR ID EQ expr .)
    FCLOSE          reduce using rule 37 (avdecl -> AVAR ID EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 142

    (32) cldecl -> CLVAR ID EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 32 (cldecl -> CLVAR ID EQ expr .)
    FCLOSE          reduce using rule 32 (cldecl -> CLVAR ID EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 143

    (33) cadecl -> CAVAR ID EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    ES              reduce using rule 33 (cadecl -> CAVAR ID EQ expr .)
    FCLOSE          reduce using rule 33 (cadecl -> CAVAR ID EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 144

    (52) fdecl -> fovars FUNCTION ID fivars group .

    ES              reduce using rule 52 (fdecl -> fovars FUNCTION ID fivars group .)


state 145

    (55) fivars -> OPEN fvars . CLOSE

    CLOSE           shift and go to state 160


state 146

    (56) fvars -> ID . EQ expr
    (57) fvars -> ID . EQ expr COMA fvars

    EQ              shift and go to state 97


state 147

    (74) access -> ID OPEN expr COMA expr . CLOSE
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    CLOSE           shift and go to state 161
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 148

    (85) fcall -> SOPEN vars SCLOSE EQ ID . OPEN pars CLOSE

    OPEN            shift and go to state 162


state 149

    (57) fvars -> ID EQ expr COMA . fvars
    (56) fvars -> . ID EQ expr
    (57) fvars -> . ID EQ expr COMA fvars
    (58) fvars -> .

    ID              shift and go to state 146
    SCLOSE          reduce using rule 58 (fvars -> .)
    CLOSE           reduce using rule 58 (fvars -> .)

    fvars                          shift and go to state 163

state 150

    (14) sent -> ID EQ expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    FCLOSE          reduce using rule 14 (sent -> ID EQ expr .)
    ES              reduce using rule 14 (sent -> ID EQ expr .)
    ELSE            reduce using rule 14 (sent -> ID EQ expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 151

    (80) else -> ELSE sent .

    ES              reduce using rule 80 (else -> ELSE sent .)
    FCLOSE          reduce using rule 80 (else -> ELSE sent .)


state 152

    (81) else -> ELSE group .

    ES              reduce using rule 81 (else -> ELSE group .)
    FCLOSE          reduce using rule 81 (else -> ELSE group .)


state 153

    (43) 2ldecl -> L2ARR ID EQ SOPEN arrs . SCLOSE

    SCLOSE          shift and go to state 164


state 154

    (48) arrs -> vals . COMD arrs
    (50) arrs -> vals .

    COMD            shift and go to state 165
    SCLOSE          reduce using rule 50 (arrs -> vals .)


state 155

    (49) arrs -> COMD . arrs
    (48) arrs -> . vals COMD arrs
    (49) arrs -> . COMD arrs
    (50) arrs -> . vals
    (51) arrs -> .
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMD            shift and go to state 155
    SCLOSE          reduce using rule 51 (arrs -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    arrs                           shift and go to state 166
    vals                           shift and go to state 154
    expr                           shift and go to state 156
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 156

    (46) vals -> expr . COMA vals
    (47) vals -> expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    COMA            shift and go to state 167
    COMD            reduce using rule 47 (vals -> expr .)
    SCLOSE          reduce using rule 47 (vals -> expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 157

    (45) 2adecl -> A2ARR ID EQ SOPEN arrs . SCLOSE

    SCLOSE          shift and go to state 168


state 158

    (39) 1ldecl -> L1ARR ID EQ SOPEN vals . SCLOSE

    SCLOSE          shift and go to state 169


state 159

    (41) 1adecl -> A1ARR ID EQ SOPEN vals . SCLOSE

    SCLOSE          shift and go to state 170


state 160

    (55) fivars -> OPEN fvars CLOSE .

    FOPEN           reduce using rule 55 (fivars -> OPEN fvars CLOSE .)


state 161

    (74) access -> ID OPEN expr COMA expr CLOSE .

    EQ              reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    GTLT            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    OR              reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    ES              reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    COMA            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    SCLOSE          reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    CLOSE           reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    PRINT           reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    ID              reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    EXTEND1         reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    EXTEND2         reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    UNDO            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    FOPEN           reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    ACONST          reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    LCONST          reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    NOT             reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    INCDEC          reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    OPEN            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    MOVE            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    GET             reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    PUSH            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    SIZE1           reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    SIZE2           reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    DO              reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    FUNCTION        reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    FCLOSE          reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    ELSE            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)
    COMD            reduce using rule 74 (access -> ID OPEN expr COMA expr CLOSE .)


state 162

    (85) fcall -> SOPEN vars SCLOSE EQ ID OPEN . pars CLOSE
    (92) pars -> . expr COMA pars
    (93) pars -> . COMA pars
    (94) pars -> . expr
    (95) pars -> .
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMA            shift and go to state 173
    CLOSE           reduce using rule 95 (pars -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    pars                           shift and go to state 171
    expr                           shift and go to state 172
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 163

    (57) fvars -> ID EQ expr COMA fvars .

    SCLOSE          reduce using rule 57 (fvars -> ID EQ expr COMA fvars .)
    CLOSE           reduce using rule 57 (fvars -> ID EQ expr COMA fvars .)


state 164

    (43) 2ldecl -> L2ARR ID EQ SOPEN arrs SCLOSE .

    ES              reduce using rule 43 (2ldecl -> L2ARR ID EQ SOPEN arrs SCLOSE .)
    FCLOSE          reduce using rule 43 (2ldecl -> L2ARR ID EQ SOPEN arrs SCLOSE .)


state 165

    (48) arrs -> vals COMD . arrs
    (48) arrs -> . vals COMD arrs
    (49) arrs -> . COMD arrs
    (50) arrs -> . vals
    (51) arrs -> .
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMD            shift and go to state 155
    SCLOSE          reduce using rule 51 (arrs -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    vals                           shift and go to state 154
    arrs                           shift and go to state 174
    expr                           shift and go to state 156
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 166

    (49) arrs -> COMD arrs .

    SCLOSE          reduce using rule 49 (arrs -> COMD arrs .)


state 167

    (46) vals -> expr COMA . vals
    (46) vals -> . expr COMA vals
    (47) vals -> . expr
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 156
    vals                           shift and go to state 175
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 168

    (45) 2adecl -> A2ARR ID EQ SOPEN arrs SCLOSE .

    ES              reduce using rule 45 (2adecl -> A2ARR ID EQ SOPEN arrs SCLOSE .)
    FCLOSE          reduce using rule 45 (2adecl -> A2ARR ID EQ SOPEN arrs SCLOSE .)


state 169

    (39) 1ldecl -> L1ARR ID EQ SOPEN vals SCLOSE .

    ES              reduce using rule 39 (1ldecl -> L1ARR ID EQ SOPEN vals SCLOSE .)
    FCLOSE          reduce using rule 39 (1ldecl -> L1ARR ID EQ SOPEN vals SCLOSE .)


state 170

    (41) 1adecl -> A1ARR ID EQ SOPEN vals SCLOSE .

    ES              reduce using rule 41 (1adecl -> A1ARR ID EQ SOPEN vals SCLOSE .)
    FCLOSE          reduce using rule 41 (1adecl -> A1ARR ID EQ SOPEN vals SCLOSE .)


state 171

    (85) fcall -> SOPEN vars SCLOSE EQ ID OPEN pars . CLOSE

    CLOSE           shift and go to state 176


state 172

    (92) pars -> expr . COMA pars
    (94) pars -> expr .
    (65) expr -> expr . GTLT expr
    (66) expr -> expr . OR expr

    COMA            shift and go to state 177
    CLOSE           reduce using rule 94 (pars -> expr .)
    GTLT            shift and go to state 58
    OR              shift and go to state 59


state 173

    (93) pars -> COMA . pars
    (92) pars -> . expr COMA pars
    (93) pars -> . COMA pars
    (94) pars -> . expr
    (95) pars -> .
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMA            shift and go to state 173
    CLOSE           reduce using rule 95 (pars -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    pars                           shift and go to state 178
    expr                           shift and go to state 172
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 174

    (48) arrs -> vals COMD arrs .

    SCLOSE          reduce using rule 48 (arrs -> vals COMD arrs .)


state 175

    (46) vals -> expr COMA vals .

    COMD            reduce using rule 46 (vals -> expr COMA vals .)
    SCLOSE          reduce using rule 46 (vals -> expr COMA vals .)


state 176

    (85) fcall -> SOPEN vars SCLOSE EQ ID OPEN pars CLOSE .

    ES              reduce using rule 85 (fcall -> SOPEN vars SCLOSE EQ ID OPEN pars CLOSE .)
    FCLOSE          reduce using rule 85 (fcall -> SOPEN vars SCLOSE EQ ID OPEN pars CLOSE .)


state 177

    (92) pars -> expr COMA . pars
    (92) pars -> . expr COMA pars
    (93) pars -> . COMA pars
    (94) pars -> . expr
    (95) pars -> .
    (59) expr -> . oper
    (60) expr -> . ACONST
    (61) expr -> . LCONST
    (62) expr -> . ID
    (63) expr -> . NOT expr
    (64) expr -> . INCDEC expr
    (65) expr -> . expr GTLT expr
    (66) expr -> . expr OR expr
    (67) expr -> . OPEN expr CLOSE
    (68) oper -> . MOVE
    (69) oper -> . GET
    (70) oper -> . PUSH
    (71) oper -> . SIZE1 ID
    (72) oper -> . SIZE2 ID expr
    (73) oper -> . access
    (74) access -> . ID OPEN expr COMA expr CLOSE
    (75) access -> . ID OPEN expr CLOSE

    COMA            shift and go to state 173
    CLOSE           reduce using rule 95 (pars -> .)
    ACONST          shift and go to state 32
    LCONST          shift and go to state 33
    ID              shift and go to state 69
    NOT             shift and go to state 34
    INCDEC          shift and go to state 35
    OPEN            shift and go to state 21
    MOVE            shift and go to state 46
    GET             shift and go to state 47
    PUSH            shift and go to state 48
    SIZE1           shift and go to state 49
    SIZE2           shift and go to state 50

    expr                           shift and go to state 172
    pars                           shift and go to state 179
    oper                           shift and go to state 31
    access                         shift and go to state 70

state 178

    (93) pars -> COMA pars .

    CLOSE           reduce using rule 93 (pars -> COMA pars .)


state 179

    (92) pars -> expr COMA pars .

    CLOSE           reduce using rule 92 (pars -> expr COMA pars .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ES in state 51 resolved as shift
WARNING: shift/reduce conflict for ES in state 53 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 69 resolved as shift
WARNING: shift/reduce conflict for FCLOSE in state 71 resolved as shift
WARNING: shift/reduce conflict for GTLT in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for GTLT in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for ES in state 86 resolved as shift
WARNING: shift/reduce conflict for GTLT in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for GTLT in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for GTLT in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for ES in state 129 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (fvars -> <empty>)
WARNING: rejected rule (vars -> <empty>) in state 20
